diff --git a/dist/esm/create-context.js b/dist/esm/create-context.js
index 458210822bd5c4a700b9b9449aa626ce714318ec..0409bf7a9747f91c5ab594158dfeefca640736ff 100644
--- a/dist/esm/create-context.js
+++ b/dist/esm/create-context.js
@@ -1,6 +1,6 @@
 "use strict";
 "use client";
-import { createContext as createContext$1, useContext } from 'react';
+import { createContext as createContext$1, useContext } from "react";
 
 function getErrorMessage(hook, provider) {
   return `${hook} returned \`undefined\`. Seems you forgot to wrap component within ${provider}`;
@@ -12,7 +12,7 @@ function createContext(options = {}) {
     hookName = "useContext",
     providerName = "Provider",
     errorMessage,
-    defaultValue
+    defaultValue,
   } = options;
   const Context = createContext$1(defaultValue);
   Context.displayName = name;
@@ -26,7 +26,7 @@ function createContext(options = {}) {
       Error.captureStackTrace?.(error, useContext$1);
       throw error;
     }
-    return context;
+    return context && context.v3;
   }
   return [Context.Provider, useContext$1, Context];
 }
diff --git a/dist/esm/styled-system/provider.js b/dist/esm/styled-system/provider.js
index 2596c6cf94fe782a9fd956fd66ca12295e930c6b..5fdb84aa3e54b26ddda8402340b14fd792be3d41 100644
--- a/dist/esm/styled-system/provider.js
+++ b/dist/esm/styled-system/provider.js
@@ -12,8 +12,8 @@ const [ChakraContextProvider, useChakraContext] = createContext({
 function ChakraProvider(props) {
   const { value: sys, children } = props;
   return /* @__PURE__ */ jsxs(ChakraContextProvider, { value: sys, children: [
-    !sys._config.disableLayers && /* @__PURE__ */ jsx(Global, { styles: sys.layers.atRule }),
-    /* @__PURE__ */ jsx(Global, { styles: sys._global }),
+    !sys.v3._config.disableLayers && /* @__PURE__ */ jsx(Global, { styles: sys.v3.layers.atRule }),
+    /* @__PURE__ */ jsx(Global, { styles: sys.v3._global }),
     children
   ] });
 }
